name: Bump & Release Version

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Bump Version

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Update version
        id: update_version
        run: php -r "require 'scripts/bump_version.php'; bump_version();"

      - name: Validate update
        if: steps.update_version.outputs.push != 'true'
        run: |
          echo "Could not update version"
          exit 1

      - name: Commit version
        id: commit_version
        env:
          EXT_VERSION: ${{ steps.update_version.outputs.ext_version }}
          EXT_RELEASE: ${{ steps.update_version.outputs.ext_release }}
        run: |
          git config --local user.email "github-actions[bot]"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Bump version to $EXT_VERSION ($EXT_RELEASE)"
          echo "::set-output name=commit_hash::$(git rev-parse HEAD)"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create artifact
        env:
          VERSION: ${{ steps.update_version.outputs.version }}
          EXT_VERSION: ${{ steps.update_version.outputs.ext_version }}
          EXT_RELEASE: ${{ steps.update_version.outputs.ext_release }}
          COMMIT_HASH: ${{ steps.commit_version.outputs.commit_hash }}
        run: |
          cat > build-outputs.txt << EOL
          $VERSION
          $EXT_VERSION
          $EXT_RELEASE
          $COMMIT_HASH
          EOL

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: outputs
          path: build-outputs.txt

  release:
    name: Release Version

    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: outputs

      - name: Handle artifact
        id: artifacts
        run: |
          echo "::set-output name=version::$(sed -n '1p' < outputs/build-outputs.txt)"
          echo "::set-output name=ext_version::$(sed -n '2p' < outputs/build-outputs.txt)"
          echo "::set-output name=ext_release::$(sed -n '3p' < outputs/build-outputs.txt)"
          echo "::set-output name=commit_hash::$(sed -n '4p' < outputs/build-outputs.txt)"

      - uses: actions/checkout@v1
        with:
          ref: ${{ steps.artifacts.outputs.commit_hash }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-dev

      - name: Build extension
        run: zip -r extension.zip _meta htdocs plib meta.xml

      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.artifacts.outputs.version }}
          release_name: Release ${{ steps.artifacts.outputs.ext_version }}
          target_commitish: ${{ steps.artifacts.outputs.commit_hash }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./extension.zip
          asset_name: DNS-Sync-for-Cloudflare.zip
          asset_content_type: application/zip